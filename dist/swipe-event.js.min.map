{"version":3,"sources":["swipe-event/src/swipe-event.js"],"names":["attachSwipeEvent","_ref","arguments","length","undefined","element","_ref$threshold","threshold","_ref$allowedTime","allowedTime","itemSelector","activeSelector","document","querySelector","HTMLElement","Error","swiping","clicked","defaults","direction","duration","distance","x","y","start","time","touch","end","Object","defineProperty","configurable","writable","swipe","JSON","parse","stringify","addEventListener","e","preventDefault","changedTouches","pageX","pageY","Date","passive","getTime","Math","sqrt","pow","abs","swipeEvent","window","CustomEvent","createEvent","initCustomEvent","detail","dispatchEvent","clickedElement","elementFromPoint","clickEvent","initMouseEvent","focus"],"mappings":"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","file":"swipe-event.js","sourcesContent":["\"use strict\";\n\nfunction attachSwipeEvent() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      element = _ref.element,\n      _ref$threshold = _ref.threshold,\n      threshold = _ref$threshold === void 0 ? 85 : _ref$threshold,\n      _ref$allowedTime = _ref.allowedTime,\n      allowedTime = _ref$allowedTime === void 0 ? 300 : _ref$allowedTime,\n      itemSelector = _ref.itemSelector,\n      activeSelector = _ref.activeSelector;\n\n  if (typeof element === 'string') {\n    element = document.querySelector(element);\n  }\n\n  if (!(element instanceof HTMLElement)) {\n    throw new Error('The touchable element is invalid.');\n  }\n\n  if (!itemSelector) {\n    throw new Error('An item selector must be provided. Items must be child of ' + element + '.');\n  }\n\n  if (!activeSelector) {\n    throw new Error('An active selector must be provided. It must be applicable to items.');\n  }\n\n  var swiping = false;\n  var clicked = false;\n  var defaults = {\n    direction: undefined,\n    // left; right; down; up;\n    duration: 0,\n    distance: {\n      x: 0,\n      y: 0\n    },\n    start: {\n      x: 0,\n      y: 0,\n      time: undefined,\n      // new Date()\n      touch: undefined\n    },\n    end: {\n      x: 0,\n      y: 0,\n      time: undefined,\n      // new Date()\n      touch: undefined\n    },\n    threshold: threshold,\n    //required min distance traveled to be considered swipe\n    allowedTime: allowedTime // maximum time allowed to travel that distance\n\n  };\n  Object.defineProperty(defaults, 'threshold', {\n    configurable: false,\n    writable: false\n  });\n  Object.defineProperty(defaults, 'allowedTime', {\n    configurable: false,\n    writable: false\n  }); // Object cloning\n\n  var swipe = JSON.parse(JSON.stringify(defaults));\n  element.addEventListener('touchstart', function (e) {\n    if (!element.querySelector(itemSelector + activeSelector)) {\n      e.preventDefault();\n      clicked = false;\n\n      if (!swiping) {\n        swipe = defaults;\n        swipe.start.touch = e.changedTouches[0];\n        swipe.start.x = swipe.start.touch.pageX;\n        swipe.start.y = swipe.start.touch.pageY;\n        swipe.distance.x = 0;\n        swipe.distance.y = 0;\n        swipe.start.time = new Date();\n        swiping = true;\n      }\n    }\n  }, {\n    passive: false\n  });\n  element.addEventListener('touchmove', function (e) {\n    if (!element.querySelector(itemSelector + activeSelector)) {\n      e.preventDefault();\n\n      if (!swiping) {\n        swipe.direction = null;\n      }\n    }\n  }, {\n    passive: false\n  });\n  element.addEventListener('touchabort', function (e) {\n    if (!element.querySelector(itemSelector + activeSelector)) {\n      e.preventDefault();\n      swiping = false;\n      swipe.direction = null;\n    }\n  }, {\n    passive: false\n  });\n  element.addEventListener('touchend', function (e) {\n    if (!element.querySelector(itemSelector + activeSelector)) {\n      e.preventDefault();\n\n      if (swiping) {\n        swipe.end.touch = e.changedTouches[0];\n        swipe.end.x = swipe.end.touch.pageX;\n        swipe.end.y = swipe.end.touch.pageY;\n        swipe.end.time = new Date();\n        swipe.duration = swipe.end.time.getTime() - swipe.start.time.getTime();\n        swipe.distance.x = swipe.end.x - swipe.start.x;\n        swipe.distance.y = swipe.end.y - swipe.start.y;\n\n        if (swipe.duration <= swipe.allowedTime) {\n          if (Math.sqrt(Math.pow(swipe.distance.x, 2) + Math.pow(swipe.distance.y, 2)) >= swipe.threshold) {\n            if (Math.abs(swipe.distance.x) >= Math.abs(swipe.distance.y)) {\n              // 2nd condition for horizontal swipe met\n              swipe.direction = swipe.distance.x < 0 ? 'left' : 'right'; // if dist traveled is negative, it indicates left swipe\n            }\n\n            if (Math.abs(swipe.distance.y) >= Math.abs(swipe.distance.x)) {\n              // 2nd condition for vertical swipe met\n              swipe.direction = swipe.distance.y < 0 ? 'up' : 'down'; // if dist traveled is negative, it indicates up swipe\n            }\n\n            if (swipe.direction && swipe.direction !== null && swipe.distance.x !== 0 && swipe.distance.y !== 0) {\n              var swipeEvent = null;\n\n              if (typeof window.CustomEvent !== 'function') {\n                swipeEvent = document.createEvent('swipe');\n                swipeEvent.initCustomEvent('swipe', false, false, swipe);\n              } else {\n                swipeEvent = new CustomEvent('swipe', {\n                  detail: swipe\n                });\n              }\n\n              element.dispatchEvent(swipeEvent);\n            } else {\n              clicked = true;\n            }\n          } else {\n            clicked = true;\n          }\n        }\n\n        swiping = false;\n      } else {\n        clicked = true;\n      }\n\n      if (clicked) {\n        var clickedElement = document.elementFromPoint(swipe.end.touch.pageX, swipe.end.touch.pageY);\n\n        if (clickedElement !== null) {\n          var clickEvent = document.createEvent('MouseEvent');\n          clickEvent.initMouseEvent('click', true,\n          /* bubble */\n          true,\n          /* cancelable */\n          window, null, swipe.end.touch.pageX, swipe.end.touch.pageY, 0, 0,\n          /* coordinates */\n          false, false, false, false,\n          /* modifier keys */\n          0,\n          /*left*/\n          null);\n          clickedElement.dispatchEvent(clickEvent);\n          clickedElement.focus();\n        }\n\n        clicked = false;\n      }\n\n      swipe = defaults;\n    }\n  }, {\n    passive: false\n  });\n  return true;\n}"]}